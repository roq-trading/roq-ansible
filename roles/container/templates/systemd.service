# !!! THIS FILE HAS BEEN AUTO-GENERATED !!!

[Unit]
{% if 'systemd' in container_config.services[item] %}
Description={{ container_config.services[item].systemd['description'] | default(item) }}
{% endif %}
Wants=network.target                                                                                             
After=network-online.target
StartLimitIntervalSec=60
StartLimitBurst=2

[Service]
Type={{ systemd_config.profiles[container_config.services[item].systemd.profile].type }}
TimeoutStartSec=0
Restart={{ systemd_config.profiles[container_config.services[item].systemd.profile].restart }}
ExecStop=-/usr/bin/{{ container_config.solution }} stop %n
ExecStartPre=-/usr/bin/{{ container_config.solution }} stop %n
ExecStartPre=-/usr/bin/{{ container_config.solution }} rm %n
ExecStart=/usr/bin/{{ container_config.solution }} run --rm --name %n \
{% if container_config.solution == 'podman' %}
  --cgroup-manager=cgroupfs \
{% endif %}
{% for k,v in container_config.services[item].container.options.items() %}
{% if v is iterable and v is not string and v is not mapping %}
{% for v2 in v %}
  --{{ k }} {{ v2 }} \
{% endfor %}
{% else %}
  --{{ k }} {{ v }} \
{% endif %}
{% endfor %}
  {{ container_config.images[container_config.services[item].container.image].registry }}/{{ container_config.images[container_config.services[item].container.image].name }}:{{ container_config.images[container_config.services[item].container.image].tag }}{{ "" if container_config.services[item].container.args | length == 0 else " \\" }}
{% for k,v in container_config.services[item].container.args.items() %}
{% if v is iterable and v is not string and v is not mapping %}
{% set outer_loop = loop %}
{% for v2 in v %}
  --{{ k }}={{ v2 }}{{ "" if outer_loop.last and loop.last else " \\" }}
{% endfor %}
{% else %}
  --{{ k }}={{ v }}{{ "" if loop.last else " \\" }}
{% endif %}
{% endfor %}

[Install]
WantedBy=multi-user.target
