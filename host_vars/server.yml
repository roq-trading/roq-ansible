---
systemd:
  scope: user  # note! system or user
  profiles: {}
container:
  solution: podman
  images: {}
  services:
    node-exporter:
      systemd:
        profile: simple
        description: node-exporter
      container:
        image: node-exporter
        options:
          volume:
            - /:/host:ro,rslave
          publish:
            - 9100:9100  # you can configure prometheus to scrape this port
        args:
          path.rootfs: /host
roq:
  auth:
    public_key: YOUR_ROQ_PUBLIC_KEY  # FIXME
    secret_key: YOUR_ROQ_SECRET_KEY  # FIXME
  flags:
    log:
      log_verbosity: 0
    loop:
      loop_sleep: 500ns
    gateway:
      auth_keys_file: '{{ user_config.config_dir }}/shared/keys.json'
      cache_all_reference_data: true
      cache_dir: '{{ user_config.cache_dir }}'
      cache_mbp_checksum: false
      download_trades_lookback: 5m
      download_trades_lookback_on_restart: 24h
      enable_portfolio: true
      event_log_dir: '{{ user_config.data_dir }}'
      event_log_iso_week: false
      event_log_symlink: true
conda:
  envs: {}
  systemd: {}
  services:
    deribit:
      systemd:
        description: deribit gateway
      conda:
        env: unstable
        package: roq-deribit
      client_listen_address:
        type: unix
      dependencies: []
      flags:
        package: test
        shared:
          - log
          - loop
          - gateway
        custom:
          loop_cpu_affinity: 1
      config:
        symbols:
          - ^BTC(_USD[A-Z]?)?-PERPETUAL$
          - ^ETH(_USD[A-Z]?)?-PERPETUAL$
        accounts:
          A1:
            login: YOUR_DERIBIT_PUBLIC_KEY  # FIXME
            secret: YOUR_DERIBIT_SECRET_KEY  # FIXME
            symbols: .*
            master: true
        users:
          service-manager:
            password: secret
          position-manager:
            password: secret
            drop_copy: true
          fix-bridge:
            password: secret
            accounts: A1
            symbols: BTC-PERPETUAL
          algo-1:
            password: secret
            accounts: A1
            symbols: BTC-PERPETUAL
    bybit:
      systemd:
        description: bybit gateway
      conda:
        env: unstable
        package: roq-bybit
      client_listen_address:
        type: unix
      dependencies: []
      flags:
        package: test
        shared:
          - log
          - loop
          - gateway
        custom:
          loop_cpu_affinity: 2
          api: inverse
      config:
        symbols:
          - ^BTCUSD[A-Z]?$
          - ^ETHUSD[A-Z]?$
        accounts:
          A1:
            login: YOUR_BYBIT_PUBLIC_KEY  # FIXME
            secret: YOUR_BYBIT_SECRET_KEY  # FIXME
            symbols: .*
            master: true
        users:
          service-manager:
            password: secret
          algo-1:
            password: secret
            accounts: A1
            symbols: BTCUSDT
    position-manager:
      systemd:
        description: position manager
      conda:
        env: unstable
        package: roq-position-manager
      dependencies:
        - deribit
      flags:
        shared:
          - log
        custom:
          database_uri: http://192.168.188.100:8123
          database_name: roq
          database_create_if_not_exists: true
          enable_portfolio: true
      config:
        symbols:
          - ^BTC(_USD[A-Z]?)?-PERPETUAL$
          - ^ETH(_USD[A-Z]?)?-PERPETUAL$
    algo-1:
      systemd:
        description: 'algo # 1'
      conda:
        env: unstable
        package: roq-cpp-algo-template
        binary: roq-cpp-algo-template  # note! here you can optionally choose the name of your binary (default is package name)
      dependencies:
        - deribit
        - bybit
      flags:
        shared:
          - log
          - loop
        custom:
          loop_cpu_affinity: 3
      config:
        strategy_id: 123
        legs:
          - source: 0
            account: A1
            exchange: deribit
            symbol: BTC-PERPETUAL
            time_in_force: gtc
          - source: 1
            account: A1
            exchange: bybit
            symbol: BTCUSD
            time_in_force: gtc
    fix-bridge:
      systemd:
        description: fix bridge
      conda:
        env: unstable
        package: roq-fix-bridge
      client_listen_address:
        type: tcp
        port: 1234
        interface: '{{ ansible_facts.default_ipv4.address }}'  # note! localhost would be safer
      dependencies:
        - deribit
      flags:
        shared:
          - log
          - loop
        custom:
          loop_cpu_affinity: 4
          init_missing_md_entry_type_to_zero: true
      config:
        symbols:
          - [USD.*, BTC.*]  # XXX FIXME TODO not supported by json/toml conversion
          - deribit:
              - BTC-PERPETUAL
              - ETH-PERPETUAL
        users:
          md1:
            component: test
            username: md1
          oe1:
            component: test
            username: oe1
            password: secret
            account: A1
        statistics:
          FUNDING_RATE:
            fix_md_entry_type: PRIOR_SETTLE_PRICE
          PRE_SETTLEMENT_PRICE:
            fix_md_entry_type: SETTLEMENT_PRICE
            default_value: -1.23
    service-manager:
      systemd:
        description: service manager
      conda:
        env: unstable
        package: roq-service-manager
      client_listen_address:
        type: tcp
        port: 2345  # you can configure prometheus to scrape this port (remember there is a url-prefix)
        interface: '{{ ansible_facts.default_ipv4.address }}'
      flags:
        shared:
          - log
        custom: {}
      config: {}  # note! special
